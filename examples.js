'use strict';

var blankWorksheet = function blankWorksheet(selector) {
    riot.mount(selector, { cells: [] });
};

var pushExample = function pushExample() {
    //    poll(function(){ updateCell('anon1',(Math.random() * 10).toString()); },2000,acc)
    riot.mount('#list1', { cells: [{ displayComponent: 'fw-table', cell: new Cell('pushDestination') }, { displayComponent: 'fw-table', cell: new Cell('pushSource', 'poll(function(){ updateCell(\'pushDestination\',(Math.random() * 10).toString()); },500,acc)') }, { displayComponent: 'fw-table', cell: new Cell('last20Values', 'valueWindow(pushDestination,acc,20)', '[]') }, { displayComponent: 'fw-table', cell: new Cell('averageValues', '(sum(last20Values)/length(last20Values))') }, { displayComponent: 'fw-speedometer', cell: new Cell('guage', 'averageValues') }, { displayComponent: 'fw-table', cell: new Cell('fetchData', 'ajaxGET(\'./test2.json\')') }] });
};

var movingAverageExample = function movingAverageExample() {
    var startCell = new Cell('inputEvents');
    var guageCell = new Cell('averageSpeed');

    riot.mount('#list1', { cells: [{ displayComponent: 'fw-speedometer', cell: guageCell }, { displayComponent: 'fw-table', cell: startCell }, { displayComponent: 'fw-table', cell: new Cell('last20events', 'valueWindow(inputEvents,acc,20)', '[]') }, { displayComponent: 'fw-table', cell: new Cell('average1', '(sum(last20events)/length(last20events))') }] });

    setTimeout(function () {
        guageCell.update('average1');

        setInterval(function () {
            startCell.update((Math.random() * 10).toString());
        }, 100);
    }, 3 * 1000);
};

var example4 = function example4() {
    riot.mount('#list1', { cells: [{ displayComponent: 'fw-speedometer', cell: new Cell() }, { displayComponent: 'fw-ajax', cell: new Cell() }, { displayComponent: 'fw-table', cell: new Cell() }, { displayComponent: 'fw-table', cell: new Cell() }, { displayComponent: 'fw-table', cell: new Cell('acc1', '(function(){ acc.push(anon3); return acc; })();', '[]') }, { displayComponent: 'fw-table', cell: new Cell('acc2', 'add((anon3 ? anon3 : 0),acc)', '0') }] });
};

var example3 = function example3() {

    var _cell1 = new Cell('cell1', '5');
    var _cell2 = new Cell('cell2', 'add(cell1,15)');

    riot.mount('#list1', { cells: [{ displayComponent: 'fw-table', cell: new Cell() }, { displayComponent: 'fw-table', cell: new Cell() }, { displayComponent: 'fw-table', cell: _cell1 }, { displayComponent: 'fw-table', cell: _cell2 }] });

    window.setTimeout(function () {
        _cell1.update('82');

        window.setTimeout(function () {
            _cell2.update('add(cell1,25)');
        }, 3000);
    }, 3000);
};
//# sourceMappingURL=data:application/json;base64,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QUFDO1NBQ2xDLEVBQUMsSUFBSSxDQUFDLENBQUM7S0FDWCxFQUFDLElBQUksQ0FBQyxDQUFDO0NBQ1gsQ0FBQyIsImZpbGUiOiJzcmMvZXhhbXBsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmxhbmtXb3Jrc2hlZXQgPSBmdW5jdGlvbihzZWxlY3Rvcil7XG4gICAgcmlvdC5tb3VudChzZWxlY3Rvcix7IGNlbGxzOiBbXSB9KTtcbn07XG5cbnZhciBwdXNoRXhhbXBsZSA9IGZ1bmN0aW9uKCl7XG4vLyAgICBwb2xsKGZ1bmN0aW9uKCl7IHVwZGF0ZUNlbGwoJ2Fub24xJywoTWF0aC5yYW5kb20oKSAqIDEwKS50b1N0cmluZygpKTsgfSwyMDAwLGFjYylcbiAgICByaW90Lm1vdW50KCcjbGlzdDEnLHsgY2VsbHM6IFtcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBuZXcgQ2VsbCgncHVzaERlc3RpbmF0aW9uJykgfSxcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBuZXcgQ2VsbCgncHVzaFNvdXJjZScsXCJwb2xsKGZ1bmN0aW9uKCl7IHVwZGF0ZUNlbGwoJ3B1c2hEZXN0aW5hdGlvbicsKE1hdGgucmFuZG9tKCkgKiAxMCkudG9TdHJpbmcoKSk7IH0sNTAwLGFjYylcIil9LFxuXG4gICAgICAgIHsgZGlzcGxheUNvbXBvbmVudDogJ2Z3LXRhYmxlJywgY2VsbDogbmV3IENlbGwoJ2xhc3QyMFZhbHVlcycsJ3ZhbHVlV2luZG93KHB1c2hEZXN0aW5hdGlvbixhY2MsMjApJywnW10nKX0sXG5cbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBuZXcgQ2VsbCgnYXZlcmFnZVZhbHVlcycsJyhzdW0obGFzdDIwVmFsdWVzKS9sZW5ndGgobGFzdDIwVmFsdWVzKSknKX0sXG5cbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctc3BlZWRvbWV0ZXInLCBjZWxsOiBuZXcgQ2VsbCgnZ3VhZ2UnLCdhdmVyYWdlVmFsdWVzJyl9LFxuICAgICAgICB7IGRpc3BsYXlDb21wb25lbnQ6ICdmdy10YWJsZScsIGNlbGw6IG5ldyBDZWxsKCdmZXRjaERhdGEnLFwiYWpheEdFVCgnLi90ZXN0Mi5qc29uJylcIil9XG4gICAgXX0pO1xuXG59XG5cbnZhciBtb3ZpbmdBdmVyYWdlRXhhbXBsZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHN0YXJ0Q2VsbCA9IG5ldyBDZWxsKCdpbnB1dEV2ZW50cycpO1xuICAgIHZhciBndWFnZUNlbGwgPSBuZXcgQ2VsbCgnYXZlcmFnZVNwZWVkJyk7XG5cbiAgICByaW90Lm1vdW50KCcjbGlzdDEnLHsgY2VsbHM6IFtcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctc3BlZWRvbWV0ZXInLCBjZWxsOiBndWFnZUNlbGwgfSxcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBzdGFydENlbGwgfSxcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBuZXcgQ2VsbCgnbGFzdDIwZXZlbnRzJywndmFsdWVXaW5kb3coaW5wdXRFdmVudHMsYWNjLDIwKScsJ1tdJykgfSxcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBuZXcgQ2VsbCgnYXZlcmFnZTEnLCcoc3VtKGxhc3QyMGV2ZW50cykvbGVuZ3RoKGxhc3QyMGV2ZW50cykpJykgfVxuICAgIF0gfSk7XG5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgIGd1YWdlQ2VsbC51cGRhdGUoJ2F2ZXJhZ2UxJyk7XG5cbiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzdGFydENlbGwudXBkYXRlKChNYXRoLnJhbmRvbSgpICogMTApLnRvU3RyaW5nKCkpO1xuICAgICAgICB9LCAxMDApO1xuXG4gICAgfSwzICogMTAwMCk7XG59O1xuXG52YXIgZXhhbXBsZTQgPSBmdW5jdGlvbigpe1xuICAgIHJpb3QubW91bnQoJyNsaXN0MScseyBjZWxsczogW1xuICAgICAgICB7IGRpc3BsYXlDb21wb25lbnQ6ICdmdy1zcGVlZG9tZXRlcicsIGNlbGw6IG5ldyBDZWxsKCkgfSxcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctYWpheCcsIGNlbGw6IG5ldyBDZWxsKCkgfSxcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBuZXcgQ2VsbCgpIH0sXG4gICAgICAgIHsgZGlzcGxheUNvbXBvbmVudDogJ2Z3LXRhYmxlJywgY2VsbDogbmV3IENlbGwoKSB9LFxuICAgICAgICB7IGRpc3BsYXlDb21wb25lbnQ6ICdmdy10YWJsZScsIGNlbGw6IG5ldyBDZWxsKCdhY2MxJywnKGZ1bmN0aW9uKCl7IGFjYy5wdXNoKGFub24zKTsgcmV0dXJuIGFjYzsgfSkoKTsnLCdbXScpIH0sXG4gICAgICAgIHsgZGlzcGxheUNvbXBvbmVudDogJ2Z3LXRhYmxlJywgY2VsbDogbmV3IENlbGwoJ2FjYzInLCdhZGQoKGFub24zID8gYW5vbjMgOiAwKSxhY2MpJywnMCcpIH1cbiAgICBdIH0pO1xufTtcblxudmFyIGV4YW1wbGUzID0gZnVuY3Rpb24oKXtcblxuICAgIHZhciBfY2VsbDEgPSBuZXcgQ2VsbCgnY2VsbDEnLCc1Jyk7XG4gICAgdmFyIF9jZWxsMiA9IG5ldyBDZWxsKCdjZWxsMicsJ2FkZChjZWxsMSwxNSknKTtcblxuICAgIHJpb3QubW91bnQoJyNsaXN0MScseyBjZWxsczogW1xuICAgICAgICB7IGRpc3BsYXlDb21wb25lbnQ6ICdmdy10YWJsZScsIGNlbGw6IG5ldyBDZWxsKCkgfSxcbiAgICAgICAgeyBkaXNwbGF5Q29tcG9uZW50OiAnZnctdGFibGUnLCBjZWxsOiBuZXcgQ2VsbCgpIH0sXG4gICAgICAgIHsgZGlzcGxheUNvbXBvbmVudDogJ2Z3LXRhYmxlJywgY2VsbDogX2NlbGwxIH0sXG4gICAgICAgIHsgZGlzcGxheUNvbXBvbmVudDogJ2Z3LXRhYmxlJywgY2VsbDogX2NlbGwyIH1cbiAgICBdIH0pO1xuXG4gICAgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgX2NlbGwxLnVwZGF0ZSgnODInKTtcblxuICAgICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgX2NlbGwyLnVwZGF0ZSgnYWRkKGNlbGwxLDI1KScpO1xuICAgICAgICB9LDMwMDApO1xuICAgIH0sMzAwMCk7XG59O1xuIl19