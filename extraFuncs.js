'use strict';

var valueWindow = function valueWindow(val, acc, windowLength) {
    if (val) {
        acc.push(val);
        if (acc.length > windowLength) {
            acc = R.remove(0, acc.length - windowLength, acc);
        }
    }

    return acc;
};

var ajaxGET = function ajaxGET(url) {

    return new Promise(function (resolve, reject) {
        // Your code
        fetch(url) //'/users.json')
        .then(function (response) {
            if (url.indexOf('.json') > -1) {
                return response.json();
            } else {
                return response.text();
            }
        }).then(resolve)['catch'](function (ex) {
            console.log('[fetch] parsing failed', ex);
            reject(ex);
        });
    });
};

var poll = function poll(func, interval, acc) {
    if (acc === undefined) {
        acc = setInterval(func, interval);
    }
    return acc;
};

var updateCell = function updateCell(cellName, value) {
    var _cell = Cell.getCell(cellName);
    _cell.update(value);
    return value;
};

//example usage
//poll(function(){ Cell.getCell('anon1').update((Math.random() * 10).toString()); },2000,acc)
//or
//poll(function(){ updateCell('anon1',(Math.random() * 10).toString()); },2000,acc)
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9leHRyYUZ1bmNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxXQUFXLEdBQUcsU0FBUyxXQUFXLENBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxZQUFZLEVBQUM7QUFDeEQsUUFBRyxHQUFHLEVBQUM7QUFDSCxXQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2QsWUFBRyxHQUFHLENBQUMsTUFBTSxHQUFHLFlBQVksRUFBQztBQUN6QixlQUFHLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxZQUFZLEVBQUMsR0FBRyxDQUFDLENBQUM7U0FDbkQ7S0FDSjs7QUFFRCxXQUFPLEdBQUcsQ0FBQztDQUNkLENBQUM7O0FBRUYsSUFBSSxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFDOztBQUUvQixXQUFPLElBQUksT0FBTyxDQUFDLFVBQVMsT0FBTyxFQUFFLE1BQU0sRUFBRTs7QUFFekMsYUFBSyxDQUFDLEdBQUcsQ0FBQztTQUNULElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBRTtBQUNyQixnQkFBRyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFDO0FBQ3pCLHVCQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUMxQixNQUFJO0FBQ0QsdUJBQU8sUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO2FBQzFCO1NBQ0osQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBTSxDQUFDLFVBQVMsRUFBRSxFQUFFO0FBQ2hDLG1CQUFPLENBQUMsR0FBRyxDQUFDLHdCQUF3QixFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzFDLGtCQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDZCxDQUFDLENBQUM7S0FDTixDQUFDLENBQUM7Q0FDTixDQUFDOztBQUVGLElBQUksSUFBSSxHQUFHLFNBQVMsSUFBSSxDQUFDLElBQUksRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFDO0FBQ3ZDLFFBQUcsR0FBRyxLQUFLLFNBQVMsRUFBQztBQUNqQixXQUFHLEdBQUcsV0FBVyxDQUFDLElBQUksRUFBQyxRQUFRLENBQUMsQ0FBQztLQUNwQztBQUNELFdBQU8sR0FBRyxDQUFDO0NBQ2QsQ0FBQzs7QUFFRixJQUFJLFVBQVUsR0FBRyxTQUFTLFVBQVUsQ0FBQyxRQUFRLEVBQUMsS0FBSyxFQUFDO0FBQ2hELFFBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7QUFDbEMsU0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNwQixXQUFPLEtBQUssQ0FBQztDQUNoQixDQUFDIiwiZmlsZSI6InNyYy9leHRyYUZ1bmNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHZhbHVlV2luZG93ID0gZnVuY3Rpb24gdmFsdWVXaW5kb3codmFsLGFjYyx3aW5kb3dMZW5ndGgpe1xuICAgIGlmKHZhbCl7XG4gICAgICAgIGFjYy5wdXNoKHZhbCk7XG4gICAgICAgIGlmKGFjYy5sZW5ndGggPiB3aW5kb3dMZW5ndGgpe1xuICAgICAgICAgICAgYWNjID0gUi5yZW1vdmUoMCxhY2MubGVuZ3RoIC0gd2luZG93TGVuZ3RoLGFjYyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xufTtcblxudmFyIGFqYXhHRVQgPSBmdW5jdGlvbiBhamF4R0VUKHVybCl7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgLy8gWW91ciBjb2RlXG4gICAgICAgIGZldGNoKHVybCkvLycvdXNlcnMuanNvbicpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICBpZih1cmwuaW5kZXhPZignLmpzb24nKSA+IC0xKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkudGhlbihyZXNvbHZlKS5jYXRjaChmdW5jdGlvbihleCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tmZXRjaF0gcGFyc2luZyBmYWlsZWQnLCBleCk7XG4gICAgICAgICAgICByZWplY3QoZXgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5cbnZhciBwb2xsID0gZnVuY3Rpb24gcG9sbChmdW5jLGludGVydmFsLGFjYyl7XG4gICAgaWYoYWNjID09PSB1bmRlZmluZWQpe1xuICAgICAgICBhY2MgPSBzZXRJbnRlcnZhbChmdW5jLGludGVydmFsKTtcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbn07XG5cbnZhciB1cGRhdGVDZWxsID0gZnVuY3Rpb24gdXBkYXRlQ2VsbChjZWxsTmFtZSx2YWx1ZSl7XG4gICAgdmFyIF9jZWxsID0gQ2VsbC5nZXRDZWxsKGNlbGxOYW1lKVxuICAgIF9jZWxsLnVwZGF0ZSh2YWx1ZSk7XG4gICAgcmV0dXJuIHZhbHVlO1xufTtcblxuLy9leGFtcGxlIHVzYWdlXG4vL3BvbGwoZnVuY3Rpb24oKXsgQ2VsbC5nZXRDZWxsKCdhbm9uMScpLnVwZGF0ZSgoTWF0aC5yYW5kb20oKSAqIDEwKS50b1N0cmluZygpKTsgfSwyMDAwLGFjYylcbi8vb3Jcbi8vcG9sbChmdW5jdGlvbigpeyB1cGRhdGVDZWxsKCdhbm9uMScsKE1hdGgucmFuZG9tKCkgKiAxMCkudG9TdHJpbmcoKSk7IH0sMjAwMCxhY2MpXG4iXX0=